////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Author: Taha Emara
//
// Youtube Cahnnel : http://www.youtube.com/user/omar0103637
// Facebook Page : https://www.facebook.com/IcPublishes
// Linkedin Profile : http://eg.linkedin.com/pub/taha-emara/a4/1ab/524/
// E-mail: : tahaemara.eng@gmail.com
//
//                   Real time face detection using OpenCV with Java
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

package vision101;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.imageio.ImageIO;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.LayoutStyle;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.WindowConstants;

import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfByte;
import org.opencv.core.MatOfRect;
import org.opencv.core.Point;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import org.opencv.objdetect.CascadeClassifier;
import org.opencv.video.KalmanFilter;
import org.opencv.videoio.VideoCapture;

import com.facedetection.vision.Constants;

/**
 *
 * @author Taha Emara
 */
public class FaceDetection extends JFrame {
    /**
     * 
     */
    private static final long serialVersionUID = 2520345069565878830L;
    // /

    private DaemonThread myThread = null;
    int count = 0;
    VideoCapture webSource = null;
    public KalmanFilter KF = new KalmanFilter();
    Mat frame = new Mat();
    MatOfByte mem = new MatOfByte();
    CascadeClassifier faceDetector = new CascadeClassifier(
	    Constants.CASCADE_CLASSIFIER_FRONT_FACE_ALT);
    MatOfRect faceDetections = new MatOfRect();

    // /

    class DaemonThread implements Runnable {

	protected volatile boolean runnable = false;

	@Override
	public void run() {
	    synchronized (this) {
		while (runnable) {
		    if (webSource.grab()) {
			try {
			    webSource.retrieve(frame);

			    Graphics g = jPanel1.getGraphics();
			    faceDetector
				    .detectMultiScale(frame, faceDetections);
			    for (Rect rect : faceDetections.toArray()) {
				Imgproc.rectangle(frame, new Point(rect.x,
					rect.y), new Point(rect.x + rect.width,
					rect.y + rect.height), new Scalar(0,
					255, 0));
				// Imgproc.circle(frame, new Point(rect.x + 90,
				// rect.y + 90), (100), new Scalar(0, 255,
				// 0), 4);
			    }
			    Imgcodecs.imencode(".bmp", frame, mem);
			    // Imgcodecs.imwrite("video.bmp", frame);
			    // System.out.println("Writing video file.");
			    Image im = ImageIO.read(new ByteArrayInputStream(
				    mem.toArray()));
			    BufferedImage buff = (BufferedImage) im;
			    if (g.drawImage(buff, 0, 0, getWidth(),
				    getHeight() - 150, 0, 0, buff.getWidth(),
				    buff.getHeight(), null)) {
				if (runnable == false) {
				    System.out.println("Paused ..... ");
				    this.wait();
				}
			    }

			} catch (Exception ex) {
			    System.out.println("Error");
			}
		    }
		}
	    }
	}
    }

    // ///////
    /**
     * Creates new form FaceDetection
     */
    public FaceDetection() {
	initComponents();
	System.out.println(FaceDetection.class
		.getResource(Constants.CASCADE_CLASSIFIER_FRONT_FACE_ALT));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed"
    // desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

	jPanel1 = new JPanel();
	jButton1 = new JButton();
	jButton2 = new JButton();

	setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

	GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
	jPanel1.setLayout(jPanel1Layout);
	jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(
		Alignment.LEADING).addGap(0, 0, Short.MAX_VALUE));
	jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(
		Alignment.LEADING).addGap(0, 376, Short.MAX_VALUE));

	jButton1.setText("Start");
	jButton1.addActionListener(new ActionListener() {
	    public void actionPerformed(ActionEvent evt) {
		jButton1ActionPerformed(evt);
	    }
	});

	jButton2.setText("Pause");
	jButton2.addActionListener(new ActionListener() {
	    public void actionPerformed(ActionEvent evt) {
		jButton2ActionPerformed(evt);
	    }
	});

	GroupLayout layout = new GroupLayout(getContentPane());
	getContentPane().setLayout(layout);
	layout.setHorizontalGroup(layout
		.createParallelGroup(Alignment.LEADING)
		.addGroup(
			layout.createSequentialGroup()
				.addGap(24, 24, 24)
				.addComponent(jPanel1,
					GroupLayout.DEFAULT_SIZE,
					GroupLayout.DEFAULT_SIZE,
					Short.MAX_VALUE).addContainerGap())
		.addGroup(
			layout.createSequentialGroup().addGap(255, 255, 255)
				.addComponent(jButton1).addGap(86, 86, 86)
				.addComponent(jButton2)
				.addContainerGap(258, Short.MAX_VALUE)));
	layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING)
		.addGroup(
			layout.createSequentialGroup()
				.addContainerGap()
				.addComponent(jPanel1,
					GroupLayout.PREFERRED_SIZE,
					GroupLayout.DEFAULT_SIZE,
					GroupLayout.PREFERRED_SIZE)
				.addPreferredGap(
					LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(
					layout.createParallelGroup(
						Alignment.BASELINE)
						.addComponent(jButton1)
						.addComponent(jButton2))
				.addContainerGap(GroupLayout.DEFAULT_SIZE,
					Short.MAX_VALUE)));

	pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
	myThread.runnable = false; // stop thread
	jButton2.setEnabled(false); // activate start button
	jButton1.setEnabled(true); // deactivate stop button

	webSource.release(); // stop caturing fron cam

    }// GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed

	webSource = new VideoCapture(0); // video capture from default cam
	myThread = new DaemonThread(); // create object of threat class
	Thread t = new Thread(myThread);
	t.setDaemon(true);
	myThread.runnable = true;
	t.start(); // start thrad
	jButton1.setEnabled(false); // deactivate start button
	jButton2.setEnabled(true); // activate stop button

    }// GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args
     *            the command line arguments
     */
    public static void main(String args[]) {
	System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
	/* Set the Nimbus look and feel */
	// <editor-fold defaultstate="collapsed"
	// desc=" Look and feel setting code (optional) ">
	/*
	 * If Nimbus (introduced in Java SE 6) is not available, stay with the
	 * default look and feel. For details see
	 * http://download.oracle.com/javase
	 * /tutorial/uiswing/lookandfeel/plaf.html
	 */
	try {
	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
		    .getInstalledLookAndFeels()) {
		if ("Nimbus".equals(info.getName())) {
		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
		    break;
		}
	    }
	} catch (ClassNotFoundException ex) {
	    Logger.getLogger(FaceDetection.class.getName()).log(
		    Level.SEVERE, null, ex);
	} catch (InstantiationException ex) {
	    Logger.getLogger(FaceDetection.class.getName()).log(Level.SEVERE,
		    null, ex);
	} catch (IllegalAccessException ex) {
	    Logger.getLogger(FaceDetection.class.getName()).log(Level.SEVERE,
		    null, ex);
	} catch (UnsupportedLookAndFeelException ex) {
	    Logger.getLogger(FaceDetection.class.getName()).log(Level.SEVERE,
		    null, ex);
	}
	// </editor-fold>

	/* Create and display the form */
	java.awt.EventQueue.invokeLater(new Runnable() {
	    public void run() {
		new FaceDetection().setVisible(true);
	    }
	});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton jButton1;
    private JButton jButton2;

    private JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
